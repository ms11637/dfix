-*DM_JOB_TYPE=1
-*DM_USERID=dm
-*DM_REQ_ACT=N
-*DM_REQ_DESC=Surrogate key - generation with  SCD support
-*-----------------------------------------------------------------------------*
-* Copyright (c) Information Builders, Inc. All rights reserved. @MFSM_NOPROLOG@
-*-----------------------------------------------------------------------------*
-:START_PRC
SET PANEL=9999
SET MORE=OFF
SET 2PARTNAME=ON
-RUN
-*[Variables to Control Request]
-SET &&CM__TARGET = 'dmreps';
-SET &&CM__AUTHOR = 'dm';
-SET &&CM__REQUEST = '&FOCFEXNAME.EVAL';
-SET &&CM__RETURN = 0;
-SET &&CM__FOCCPU = &FOCCPU.EVAL;
-DEFAULT &DBMSERROR = 10000000
-DEFAULT &STARTAT = 0
-DEFAULT &STOPAT  = 1000000000
-TYPE  (ICM18122) Request - &FOCFEXNAME (Owner: dm) submitted.
-GOTO :DEP_MAIN;
-:DEP_MAIN
-TYPE  (ICM18742) dmreps type SQLORA Existing target
-*[SCD] - Slow Changing Dimensions load type
SET CASESTAT=EXTENDED
SQL SET UPCASE=OFF; END
-TYPE  (ICM18429) Issuing PREPARE
SQL PREPARE SQLIN FROM
SELECT DISTINCT
   T1.EMPID , --Employee ID
   T1.PLANT , --Store Name
   T1.SALESREP  --Plant Location
FROM
   dmsale T1
END
-RUN
-SET &&CM__RETURN = IF &FOCERRNUM EQ 14104 THEN 0 ELSE &FOCERRNUM;
-IF (&&CM__RETURN NE 0) GOTO :ENDJOB;
-IF (&SQLAPT EQ 'APT') GOTO :SKIPHOLD;
-TYPE  (ICM18440) Request will process data via NON-Pass Through (NON-APT)
-TYPE  (ICM18451) HOLD file will be created for output file named: SQLIN.
SQL EXECUTE SQLIN;
TABLE ON TABLE HOLD AS
SQLIN
 FORMAT DATREC
IF RECORDLIMIT EQ &STOPAT
END
-RUN
-SET &&CM__RETURN = &FOCERRNUM;
-IF (&&CM__RETURN NE 0) GOTO :ENDJOB;
-:SKIPHOLD
SQL DELETE FROM dmreps
END
-RUN
-SET &&CM__RETURN = &FOCERRNUM;
-IF (&&CM__RETURN NE 0) GOTO :ENDJOB;
SQL SQLORA
COMMIT WORK;
END
-RUN
-TYPE  (ICM18743) Starting Load
-TYPE  (ICM18706) Slowly Changing Dimensions
-*SCD: Get last surrogate key
SET MSG=OFF
-SET &LASTSKEY = 0;
SET HOLDLIST=PRINTONLY
TABLE FILE dmreps
SUM
 MAX.REPNO/I11
ON TABLE HOLD AS LASTSKEY FORMAT ALPHA
END
-RUN
-IF (&FOCERRNUM NE 0) GOTO :ENDJOB;
-IF (&LINES EQ 0) GOTO LASTSKEY:;
-READ LASTSKEY &LASTSKEY.A11B.
-LASTSKEY:
SET MSG=ON
MODIFY FILE dmreps
 FIXFORM FROM SQLIN ALIAS PROPAGATE
 GOTO MATCHIT1
 CASE MATCHIT1
  COMPUTE
   EMPID/A5=E01;
   PLANT/A3=E02;
   FNAME/A16V=SUBSTRING (E03, 1, 16);
   LNAME/A34V=SUBSTRING ( E03, 17, 50 );
   STATE/A2=DECODE E02 (BOS MA DAL TX LA CA ORL FL SEA WA STL MO);
  MATCH EMPID
-* New record - logical key doesn't exist
   ON NOMATCH COMPUTE ACTIVE=1;
   ON NOMATCH PERFORM NUM_DATES:
   ON NOMATCH INCLUDE
   ON NOMATCH GOTO TOP
-* Existing record
-* Update type I columns.
   ON MATCH UPDATE FNAME LNAME
-* Check for type II change for active record
   ON MATCH IF D.ACTIVE NE 1 GOTO CALLMORE1:;
   ON MATCH IF D.PLANT EQ PLANT AND D.STATE EQ STATE GOTO CALLMORE1:;
-* Process type II change
-* Make record inactive
   ON MATCH COMPUTE ACTIVE=0;
   ON MATCH UPDATE ACTIVE
-* Add new record.
   ON MATCH COMPUTE ACTIVE=1;
   ON MATCH PERFORM NUM_DATES:
   ON MATCH INCLUDE
   ON MATCH GOTO CALLMORE1:
 ENDCASE
 CASE CALLMORE1:
-* Update all records for a logical key, and call case to process type II change
  NEXT EMPID
   ON NONEXT GOTO CALLMORE2:
-* Update type I columns.
   ON NEXT COMPUTE
     FNAME/A16V=SUBSTRING (E03, 1, 16);
     LNAME/A34V=SUBSTRING ( E03, 17, 50 );
   ON NEXT UPDATE FNAME LNAME
-* Check for type II change for active record
   ON NEXT IF D.ACTIVE NE 1 GOTO CALLMORE1:;
   ON NEXT IF D.PLANT EQ PLANT AND D.STATE EQ STATE GOTO CALLMORE1:;
-* Process type II change
-* Make record inactive
   ON NEXT COMPUTE ACTIVE=0;
   ON NEXT UPDATE ACTIVE
-* Add new record
   ON NEXT COMPUTE ACTIVE=1;
   ON NEXT PERFORM NUM_DATES:
   ON NEXT INCLUDE
   ON NEXT GOTO CALLMORE1:
 ENDCASE
 CASE CALLMORE2:
  MATCH EMPID
   ON NOMATCH GOTO TOP
   ON MATCH IF D.FNAME EQ FNAME AND D.LNAME EQ LNAME GOTO CALLMORE3:;
-* Compute type I fields before update
   ON MATCH COMPUTE
     FNAME=FNAME;
     LNAME=LNAME;
   ON MATCH UPDATE FNAME LNAME
   ON MATCH GOTO CALLMORE3:
 ENDCASE
 CASE CALLMORE3:
  NEXT EMPID
   ON NONEXT GOTO TOP
   ON NEXT IF D.FNAME EQ FNAME AND D.LNAME EQ LNAME GOTO CALLMORE3:;
-* Compute type I fields before update
   ON NEXT COMPUTE
     FNAME=FNAME;
     LNAME=LNAME;
   ON NEXT UPDATE FNAME LNAME
   ON NEXT GOTO CALLMORE3:
 ENDCASE
-* Set new key, Start and End dates for active rows
 CASE NUM_DATES:
  COMPUTE
   NEWKEY/I11=IF NEWKEY EQ 0 THEN &LASTSKEY + 1 ELSE NEWKEY + 1;
   REPNO=NEWKEY;
 ENDCASE
 CASE AT START
  START &STARTAT
  STOP  &STOPAT
  STOP  DBMSERRORS &DBMSERROR
  LOG DBMSERR MSG OFF
  LOG DUPL    MSG OFF
  LOG INVALID MSG OFF
  LOG NOMATCH MSG OFF
  LOG FORMAT  MSG OFF
  LOG ACCEPT  MSG OFF
  LOG TRANS   MSG OFF
  CHECK 1000
 ENDCASE
 DATA VIA SQLGET
END
-RUN
-TYPE  (ICM18744) Ending Load
-SET &&CM__RETURN = &FOCERRNUM;
-SET &&CM__RETURN = IF (&&CM__RETURN EQ 1416) AND (&DBMSERR LT &DBMSERROR)
- THEN 0 ELSE &&CM__RETURN;
-:ENDJOB
-TYPE  (ICM18040) Return Code = &&CM__RETURN
SET CASESTAT=OFF
SQL SET UPCASE=ON; END
SET EMGSRV=OFF
SQL PURGE SQLIN;
END
FI SQLIN CLEAR
SET EMGSRV=ON
SQL SQLORA
COMMIT WORK;
END
-RUN
-TYPE  (ICM18076) Request: &FOCFEXNAME - finished processing
-SET &&CM__FOCCPU = &FOCCPU.EVAL - &&CM__FOCCPU;
-TYPE  (ICM18007) CPU Time : &&CM__FOCCPU
-*[Main Condition]
-*[Main End]
-*[Dependence]
-:ENDDEP
SET PANEL=0
SET MORE=ON
SET 2PARTNAME=OFF
-RUN
